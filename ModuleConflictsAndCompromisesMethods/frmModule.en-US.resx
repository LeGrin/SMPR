<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label9.Size" type="System.Drawing.Size, System.Drawing">
    <value>40, 13</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>Result:</value>
  </data>
  <data name="label8.Size" type="System.Drawing.Size, System.Drawing">
    <value>93, 13</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>Displaying method</value>
  </data>
  <data name="label7.Size" type="System.Drawing.Size, System.Drawing">
    <value>65, 13</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>Player fo set</value>
  </data>
  <data name="playerList.Items" xml:space="preserve">
    <value>Player №1</value>
  </data>
  <data name="playerList.Items1" xml:space="preserve">
    <value>Player №2</value>
  </data>
  <data name="label4.Size" type="System.Drawing.Size, System.Drawing">
    <value>170, 13</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Number of strategies for player №2</value>
  </data>
  <data name="label3.Size" type="System.Drawing.Size, System.Drawing">
    <value>170, 13</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Number of strategies for player №1</value>
  </data>
  <data name="label2.Size" type="System.Drawing.Size, System.Drawing">
    <value>111, 13</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>Function of player №2</value>
  </data>
  <data name="label1.Size" type="System.Drawing.Size, System.Drawing">
    <value>111, 13</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>Function of player №1</value>
  </data>
  <data name="autoFillBtn.Text" xml:space="preserve">
    <value>Fill</value>
  </data>
  <data name="label6.Size" type="System.Drawing.Size, System.Drawing">
    <value>59, 13</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>MAX value</value>
  </data>
  <data name="label5.Size" type="System.Drawing.Size, System.Drawing">
    <value>56, 13</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>MIN value</value>
  </data>
  <data name="autoFillFlag.Size" type="System.Drawing.Size, System.Drawing">
    <value>159, 17</value>
  </data>
  <data name="autoFillFlag.Text" xml:space="preserve">
    <value>Fill added cells automatically</value>
  </data>
  <data name="autoFillOptions.Text" xml:space="preserve">
    <value>Autofilling</value>
  </data>
  <data name="gameOptions.Text" xml:space="preserve">
    <value>game parameters</value>
  </data>
  <data name="loadFromBufferToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>164, 22</value>
  </data>
  <data name="loadFromBufferToolStripMenuItem.Text" xml:space="preserve">
    <value>Load from buffer</value>
  </data>
  <data name="saveToBufferToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>164, 22</value>
  </data>
  <data name="saveToBufferToolStripMenuItem.Text" xml:space="preserve">
    <value>Save to buffer</value>
  </data>
  <data name="gameToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>86, 20</value>
  </data>
  <data name="gameToolStripMenuItem.Text" xml:space="preserve">
    <value>Game matrix</value>
  </data>
  <data name="звичайнийToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>125, 22</value>
  </data>
  <data name="звичайнийToolStripMenuItem.Text" xml:space="preserve">
    <value>Common</value>
  </data>
  <data name="тестToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>125, 22</value>
  </data>
  <data name="тестToolStripMenuItem.Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="режимToolStripMenuItem.Size" type="System.Drawing.Size, System.Drawing">
    <value>50, 20</value>
  </data>
  <data name="режимToolStripMenuItem.Text" xml:space="preserve">
    <value>Mode</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAB
        AAAAAAAAR7RhAE7JfgD/mTUA/7hpAFXfnABc4aAAPJbWAFCj3ABdqN0AXbTrAH7T/wCE6rQAmO6+AP/a
        nwD/3KIA/+W1AP/qvwCby+sAhdb/AKvj/wC96v8AyvnYAP/21wDk/uYA//zlAOT3/wDo8/oA9v3/AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDAwMDAwAAAAAAAAADBA4ODg4ODgQDAAAAAAAA
        Aw4ODxAREA8OAwAAAAAAAAMODhAXGRcQDgMAAQEBAQEBAw4RGf8ZEQMAAQIFBQUFBQUDBwcHBwMAAAEF
        BgwNDAYFBwoLCwoHAAABBQwWGBYMBQcTFBUUBwAAAAENGP8YDQUHFBocGgcAAAAAAQcHBwcBBwgS/wkH
        AAAAAAcKCwsKBwAHBwcHAAAAAAAHExQVFAcAAAAAAAAAAAAABxQaHBoHAAAAAAAAAAAAAAcIEhsJBwAA
        AAAAAAAAAAAABwcHBwAAAAAAAAAAAP//AAD+AQAA/AAAAPwAAAD8AAAAgAEAAAADAAAAAwAAAAMAAIAD
        AADAAwAAwIcAAMD/AADA/wAAwP8AAOH/AAAoAAAAEAAAACAAAAABAAgAAAAAAAABAAAAAAAAAAAAAAAB
        AAAAAQAAAAAAAEe0YQBOyX4A/5k1AP+4aQBV35wAXOGgADyW1gBQo9wAXajdAF206wB+0/8AhOq0AJju
        vgD/2p8A/9yiAP/ltQD/6r8Am8vrAIXW/wCr4/8Aver/AMr52AD/9tcA5P7mAP/85QDk9/8A6PP6APb9
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwMDAwMAAAAAAAAAAwQODg4ODg4EAwAA
        AAAAAAMODg8QERAPDgMAAAAAAAADDg4QFxkXEA4DAAEBAQEBAQMOERn/GREDAAECBQUFBQUFAwcHBwcD
        AAABBQYMDQwGBQcKCwsKBwAAAQUMFhgWDAUHExQVFAcAAAABDRj/GA0FBxQaHBoHAAAAAAEHBwcHAQcI
        Ev8JBwAAAAAHCgsLCgcABwcHBwAAAAAABxMUFRQHAAAAAAAAAAAAAAcUGhwaBwAAAAAAAAAAAAAHCBIb
        CQcAAAAAAAAAAAAAAAcHBwcAAAAAAAAAAAD//wAA/gEAAPwAAAD8AAAA/AAAAIABAAAAAwAAAAMAAAAD
        AACAAwAAwAMAAMCHAADA/wAAwP8AAMD/AADh/wAA
</value>
  </data>
</root>